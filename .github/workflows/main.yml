name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          clean: true

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Lint Source Code
        run: |
          echo "Linting code..."
          sleep 1
          echo "No issues found!"

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Build Project
        run: |
          echo "Building the application..."
          sleep 2
          echo "Build successful!"

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run Tests
        run: |
          echo "Running tests..."
          sleep 2
          echo "All tests passed!"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Scan for Vulnerabilities
        run: |
          echo "Scanning for vulnerabilities..."
          sleep 2
          echo "No vulnerabilities found!"

  generate-reports:
    name: Generate Reports
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Generate Test Report
        run: |
          echo "Generating test report..."
          sleep 1
          echo "Report generated!"

  package:
    name: Package Artifact
    runs-on: ubuntu-latest
    needs: generate-reports
    steps:
      - name: Create Artifact
        run: |
          mkdir -p output
          echo "the artifact has been build successfully. END OF REPORT" > output/build.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: output/

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: package
    environment:
      name: production
      url: https://relationalfs-team.atlassian.net/jira
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifact/

      - name: Deploy Application
        run: |
          echo "Deploying application with artifact:"
          cat ./artifact/build.txt
          sleep 3
          echo "Deployment successful!"

  post-deploy-verify:
    name: Post Deployment Verification
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          sleep 2
          echo "Deployment verified successfully!"
